plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream ->
        localProperties.load(stream)
    }
}

android {
    namespace = "com.example.snap_vison_client"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = '17'
        targetCompatibility = '17'
    }

    kotlinOptions {
        jvmTarget = 17
    }

    signingConfigs {
        common {
            keyAlias localProperties['KEY_ALIAS']
            keyPassword localProperties['KEY_PASSWORD']
            storeFile file('./keystore/easydisplay_upload.jks')
            storePassword localProperties['KEYSTORE_PASSWORD']
        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.vinda.snap_vison_client"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 21
        targetSdk = 34
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.common
        }
    }
}

flutter {
    source = "../.."
}
